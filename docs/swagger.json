{
    "swagger": "2.0",
    "info": {
        "title": "Tournify REST API",
        "contact": {}
    },
    "paths": {
        "/tournament": {
            "get": {
                "description": "This endpoint is used to get tournaments with pagination",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tournament"
                ],
                "summary": "Gets tournaments",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entities.User"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "This endpoint is used to create a new tournament",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tournament"
                ],
                "summary": "Create tournament",
                "parameters": [
                    {
                        "description": "Tournament",
                        "name": "CreatePayload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/tournament.CreateTournament"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/entities.Tournament"
                        }
                    }
                }
            }
        },
        "/tournament/{id}": {
            "get": {
                "description": "This endpoint is used to get a single tournament by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tournament"
                ],
                "summary": "Gets tournament by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id of a tournament",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.Tournament"
                        }
                    }
                }
            },
            "delete": {
                "description": "This endpoint is used to delete a tournament",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tournament"
                ],
                "summary": "Deletes tournament",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id of a tournament",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "patch": {
                "description": "This endpoint is used to update a tournament",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tournament"
                ],
                "summary": "Update tournament",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id of a tournament",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Tournament Payload",
                        "name": "UpdateTournament",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/tournament.CreateTournament"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/user": {
            "get": {
                "description": "This endpoint is used to get users with pagination and search",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "gets users",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entities.User"
                            }
                        }
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "description": "This endpoint is used to login to an existent account using the email and password",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Login to an existent account",
                "parameters": [
                    {
                        "description": "User",
                        "name": "LoginPayload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.LoginUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.LoginResponse"
                        }
                    }
                }
            }
        },
        "/user/me": {
            "get": {
                "description": "This endpoint is used to get the current logged in user info",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "gets the user info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.User"
                        }
                    }
                }
            }
        },
        "/user/{id}": {
            "get": {
                "description": "This endpoint is used to signup a new user using the username, email and password",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "signup",
                "parameters": [
                    {
                        "description": "User",
                        "name": "CreatePayload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.CreateUser"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/user.SignupResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "This endpoint is used to delete existing user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "delete user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "patch": {
                "description": "This endpoint is used to update existing user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "update user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User",
                        "name": "UpdatePayload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UpdateUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        }
    },
    "definitions": {
        "entities.Tournament": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "creatorId": {
                    "type": "integer"
                },
                "deletedAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "game": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "numOfTeams": {
                    "type": "integer"
                },
                "startDate": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.User"
                    }
                }
            }
        },
        "entities.User": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "myTournaments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Tournament"
                    }
                },
                "tournaments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Tournament"
                    }
                },
                "updatedAt": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "tournament.CreateTournament": {
            "type": "object",
            "required": [
                "endDate",
                "game",
                "name",
                "numOfTeams",
                "startDate"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "game": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "numOfTeams": {
                    "type": "integer",
                    "minimum": 2
                },
                "startDate": {
                    "type": "string"
                }
            }
        },
        "user.CreateUser": {
            "type": "object",
            "required": [
                "email",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "user.LoginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "user.LoginUser": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "user.SignupResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/entities.User"
                }
            }
        },
        "user.UpdateUser": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}